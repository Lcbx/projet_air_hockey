<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <metadata name="notifyIcon1.TrayLocation" type="System.Drawing.Point, System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a">
    <value>17, 17</value>
  </metadata>
  <data name="richTextBox1.Text" xml:space="preserve">
    <value>Mode d'édition de la table

La barre d'outils à gauche contiens l'ensemble des outils présentés dans l'onglet outils. 

La barre des propriétés à droite présente les informations concernant les propriétés du seul objet sélectionné (Un seul objet doit être sélectionné):
1. Contient la position sur l'axe des X et Y par rapport au centre de la table.
2. Contient l'angle de rotation (en degrés).
3. Contient le facteur de taille, nommé échelle, par rapport à la forme originale. Pour le muret, l'échelle n'a effet que sur la longeur.</value>
  </data>
  <data name="richTextBox2.Text" xml:space="preserve">
    <value>Onglet Fichier

1) Nouveau : Permet de créer une nouvelle table vide aux tailles prédéfinies. Supprime la table en cours d'édition, alors il est important de sauvegarder auparavant.

2) Ouvrir : Permet d'ouvrir une table qui a déjà été enregistrée. Supprime la table en cours d'édition, alors il est important de sauvegarder auparavant.

3) Enregistrer : Permet de sauvegarder la table. Si la table a déjà été enregistré sous un nom ou elle a été ouverte, elle est enregistré sous le nom précédent (à l'exception de la table par défaut). Sinon, effectue enregistrer sous.

4) Enregistrer sous : Permet de sauvegarder la table avec un nom. Le nom de la table ne peut pas être défaut.

5) Propriétés : Permet de modifier les propriétés de la table tel que le coefficient de friction de la surface, le coefficient de rebond des murs et murets et l'accélération des bonus accélérateurs.

5.1) Friction : Coefficient de friction entre la surface et la rondelle. Le minimum 0 signifie aucune friction et le maximum 100 indique un forte décélération pour la distance parcourue.

5.2) Rebond : Coefficient de rebond entre la rondelle et les murets et murs . Le minimum 0 signifie qu'il n'y a pas de rebondissement et le maximum 1 signifie que la collision est parfaitement élastique (vitesse conservée pour la rondelle)

5.3) Accélération : Accélération à laquelle est soumise la rondelle lors de son passage sur un bonus accélérateur. Le minimum 0 signifie qu'il n'y a pas d'accélération et le maximum 10 signifie une accélération importante.6) Mode Test : Permet de tester la table en cours d'édition. Plus amples informations présentes plus loin.

6) Menu Principal : Permet de revenir au menu principal.</value>
  </data>
  <data name="richTextBox4.Text" xml:space="preserve">
    <value>Onglet Outils

1) Sélection : Change l'outil en cours pour la sélection. Il est possible de cliquer sur un objet pour le sélectionner. Appuyer sur la touche Ctrl et cliquer pour inverser la sélection d'un objet. Il est possible de créer un rectangle de sélection afin de sélectionner tous les objets dans le rectangle. Appuyer sur la touche Ctrl et créer un rectangle de sélection inverse la sélection de tous les objets dans le rectangle.

2) Déplacement : Permet de déplacer les objets sélectionnés via un clic et un déplacement de la souris. Si un des objets sélectionnés devais sortir de la table, le déplacement est bloqué à la dernière position valide.

3) Rotation : Permet d'effectuer une rotation autour du centre géométrique des objets sélectionnés. Tant que le clic est enfoncé, se déplacer vers le haut de la fenêtre effectue une rotation dans le sens horaire alors que se déplacer vers le bas effecture une rotation dans le sens anti-horaire.

4) Duplication : Permet de dupliquer les objets sélectionnés. Les objets sont ajoutés conservent leurs positions et rotation par rapport au centre géométrique de la sélection.

5) Zoom : Permet d'effectuer un zoom à l'aide d'un rectangle élastique. La région sélectionnée sera agrandie afin de prendre tout l'espace disponible. Si la touche Alt est enfoncée, la région visible sera placée à l'intérieur du rectangle élastique. Respecte la limite de zoom.

6) Création d'objets
6.1) Bonus accélérateur : Cliquer à l'endroit désiré pour l'ajouter. Aucune partie du bonus ne doit être situé à l'extérieur de la table sans quoi son positionnement sera invalide.
6.2) Portail : Cliquer à l'endroit désiré pour ajouter le premier portail puis cliquer à un second endroit pour ajouter sa paire. Si l'outils est changé sans que le second portail n'ait été posé, le premier portail sera retiré. Aucune partie du portail ne doit être situé à l'extérieur de la table sans quoi son positionnement sera invalide.
6.3) Muret : Cliquer à l'endroit désiré pour commencer le muret et au second endroit désiré afin de terminer le muret. Aucune partie du muret ne doit être situé à l'extérieur de la table sans quoi son positionnement sera invalide et le muret annulé.

7) Gestion des points de contrôle : Permet de modifier la forme de la table en cliquant sur un des 8 points délimiteurs en bleu et en les déplaçants. Les modifications sont effectuées en miroirs. Un point ne pourra pas être déplacé plus loin s'il causerait qu'un objet de la table sorte.</value>
  </data>
  <data name="richTextBox5.Text" xml:space="preserve">
    <value>Onglet Vues

1) Orthographique : Change la vue pour une vue aérienne sans rotation. La molette permet de changer le niveau de zoom et le clic droit permet de déplacer verticalement et horizontalement la vue.

2) Orbite : Change la vue pour une vue aérienne avec rotation. La molette permet de changer l'élévation de la vue alors que le clic droit permet d'effectuer une révolution autour du centre de la table.</value>
  </data>
  <data name="richTextBox6.Text" xml:space="preserve">
    <value>Mode test de la table

La barre de menus est accessible à l'appuis de la touche escape. Le premier joueur utilise la souris pour contrôler le maillet et le second joueur, si configuré humain dans le menu de configuration, utilise les touches configurées.</value>
  </data>
  <data name="richTextBox8.Text" xml:space="preserve">
    <value>Onglet vues

1) Orthographique : Change la vue pour une vue aérienne sans rotation. La molette permet de changer le niveau de zoom et le clic droit permet de déplacer verticalement et horizontalement la vue.

2) Orbite : Change la vue pour une vue aérienne avec rotation. La molette permet de changer l'élévation de la vue alors que le clic droit permet d'effectuer une révolution autour du centre de la table.</value>
  </data>
</root>